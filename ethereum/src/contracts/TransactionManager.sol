// SPDX-License-Identifier: MIT
pragma solidity ^0.4.17;

contract TransactionManager {
    struct Transaction {
        string id; // transaction id generated by firebase
        string recordId; // id of the created/updated/deleted record
        string operation; // create || update || delete
        string performedBy; // clinic member id
        string timeStamp; // time stamp
        string description; 
    }

    Transaction[] public transactions;
    string public clinicId; // clinic id generated by firebase
    string public clinicName; // name of the clinic
    address public admin; // address of the user who deployed the contract

    function TransactionManager(string memory _clinicName, string memory _clinicId) public {
        clinicName = _clinicName;
        clinicId = _clinicId;
        admin = msg.sender;
    }

    function createTransaction(string memory _id, string memory _operation, string memory _performedBy, string memory _timeStamp, string memory _description) public {
        Transaction storage newTransaction;
        newTransaction.id = _id;
        newTransaction.operation = _operation;
        newTransaction.performedBy = _performedBy;
        newTransaction.timeStamp = _timeStamp;
        newTransaction.description = _description;
        transactions.push(newTransaction);
    }

    function getTransactionCount() public view returns(uint256){
        return transactions.length;
    }

    function getAllTransactions() public view returns(Transaction[] memory){
        return transactions;
    }
}
